#define MYLIB_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char *LoadString(int N);
int StringLength(char *str);
void LoadArray(char *p, char arr[]);
void ReverseArray(char arr[], char rev[], int n);
void DisplayArray(char arr[], int n);
int SumStringASCII(char *p);
void ReverseString(char *start, char *end);



#include "mylib.h"


char *LoadString(int N) {
    char *str = (char *)malloc((N + 1) * sizeof(char));
    if (str == NULL) {
        printf("Memory allocation failed!\n");
        exit(1);
    }
    printf("Enter the string:\n");
    fgets(str, N + 1, stdin);

   
    int len = strlen(str);
    if (str[len - 1] == '\n')
        str[len - 1] = '\0';
    return str;
}


int StringLength(char *str) {
    int count = 0;
    while (*str != '\0') {
        count++;
        str++;
    }
    return count;
}


void LoadArray(char *p, char arr[]) {
    int i = 0;
    while (p[i] != '\0') {
        arr[i] = p[i];
        i++;
    }
    arr[i] = '\0';
}


void ReverseArray(char arr[], char rev[], int n) {
    for (int i = 0; i < n; i++) {
        rev[i] = arr[n - i - 1];
    }
    rev[n] = '\0';
}


void DisplayArray(char arr[], int n) {
    for (int i = 0; i < n; i++)
        printf("%c", arr[i]);
    printf("\n");
}


int SumStringASCII(char *p) {
    if (*p == '\0')
        return 0;
    else
        return *p + SumStringASCII(p + 1);
}

void ReverseString(char *start, char *end) {
    if (start >= end)
        return;
    char temp = *start;
    *start = *end;
    *end = temp;
    ReverseString(start + 1, end - 1);
}
